export const forceKeepAlive: Record<string, string[]> = {
  // Things that are incorrectly reported as unsupported.
  // These should be filed to https://github.com/mdn/browser-compat-data/issues
  BeforeUnloadEvent: ["returnValue"],
  console: [
    "assert",
    "clear",
    "count",
    "countReset",
    "debug",
    "dir",
    "dirxml",
    "error",
    "group",
    "groupCollapsed",
    "groupEnd",
    "info",
    "log",
    "profile",
    "profileEnd",
    "table",
    "time",
    "timeEnd",
    "timeLog",
    "timeStamp",
    "trace",
    "warn",
  ],
  CSSConditionRule: ["conditionText"],
  CSSGroupingRule: ["cssRules", "deleteRule", "insertRule"],
  CSSStyleDeclaration: [
    "alignContent",
    "alignItems",
    "alignSelf",
    "alignmentBaseline",
    "baselineShift",
    "breakAfter",
    "breakBefore",
    "breakInside",
    "clipRule",
    "colorInterpolation",
    "colorInterpolationFilters",
    "columnGap",
    "dominantBaseline",
    "fill",
    "fillOpacity",
    "fillRule",
    "floodColor",
    "floodOpacity",
    "fontSizeAdjust",
    "fontVariantPosition",
    "gap",
    "gridColumnGap",
    "gridGap",
    "gridRowGap",
    "justifyContent",
    "justifyItems",
    "justifySelf",
    "lightingColor",
    "marker",
    "markerEnd",
    "markerMid",
    "markerStart",
    "placeContent",
    "placeItems",
    "placeSelf",
    "rotate",
    "rowGap",
    "scale",
    "shapeRendering",
    "stopColor",
    "stopOpacity",
    "stroke",
    "strokeDasharray",
    "strokeDashoffset",
    "strokeLinecap",
    "strokeLinejoin",
    "strokeMiterlimit",
    "strokeOpacity",
    "strokeWidth",
    "textAnchor",
    "translate",
    "webkitAlignContent",
    "webkitAlignItems",
    "webkitAlignSelf",
    "webkitJustifyContent",
    "webkitMaskBoxImageOutset",
    "webkitMaskBoxImageRepeat",
    "webkitMaskBoxImageSlice",
    "webkitMaskBoxImageSource",
    "webkitMaskBoxImageWidth",
    "wordWrap", // TODO: Support for alternative names
  ],
  CloseEvent: ["code", "reason", "wasClean"],
  DOMRectList: ["item", "length"],
  DOMMatrix: ["fromFloat32Array", "fromFloat64Array", "fromMatrix"],
  DOMPoint: ["fromPoint"],
  DOMRect: ["fromRect"],
  Document: ["charset", "inputEncoding"],
  Element: ["webkitMatchesSelector"],
  ExtendableMessageEvent: ["lastEventId", "origin", "ports", "source"],
  FileReader: ["onloadstart"],
  Gamepad: ["hapticActuators"],
  HTMLIFrameElement: ["allowPaymentRequest"],
  KeyframeEffect: ["iterationComposite"],
  LinkStyle: ["sheet"],
  MediaCapabilities: ["encodingInfo"],
  MutationEvent: [
    "attrChange",
    "attrName",
    "newValue",
    "prevValue",
    "relatedNode",
    "initMutationEvent",
    "ADDITION",
    "MODIFICATION",
    "REMOVAL",
  ],
  OfflineAudioContext: ["resume"],
  PaymentRequest: ["shippingAddress"],
  PictureInPictureWindow: [
    "requestPictureInPicture",
    "onenterpictureinpicture",
    "onleavepictureinpicture",
    "autoPictureInPicture",
    "disablePictureInPicture",
  ],
  Request: ["keepalive"],
  ResizeObserverSize: ["blockSize", "inlineSize"],
  RTCDtlsTransport: ["onstatechange", "state"],
  RTCPeerConnection: ["canTrickleIceCandidates"],
  ServiceWorkerGlobalScope: ["onmessageerror"],
  SVGAnimatedTransformList: ["animVal", "baseVal"],
  SVGElement: ["ownerSVGElement", "viewportElement"],
  SVGTransformList: [
    "numberOfItems",
    "appendItem",
    "clear",
    "consolidate",
    "createSVGTransformFromMatrix",
    "getItem",
    "initialize",
    "insertItemBefore",
    "removeItem",
    "replaceItem",
  ],
  SpeechSynthesisEvent: ["charLength"],
  WebAssembly: [
    "compile",
    "compileStreaming",
    "instantiate",
    "instantiateStreaming",
    "validate",
  ],
  WindowEventHandlers: ["onmessage"],
  WorkerGlobalScope: ["onrejectionhandled", "onunhandledrejection"],
  WorkletGlobalScope: [],
  // (WebAssembly namespace members)
  // TODO: Shouldn't these be inside "WebAssembly"?
  Instance: ["exports"],
  Global: ["value", "valueOf"],
  Memory: ["buffer", "grow"],
  Module: ["customSections", "exports", "imports"],
  Table: ["length", "get", "grow", "set"],

  // Widely supported but without being correctly exposed to global
  ReadableStreamDefaultReader: ["closed", "cancel", "read", "releaseLock"],
  ReadableStreamDefaultController: ["desiredSize", "close", "enqueue", "error"],
  WebGLVertexArrayObjectOES: [],
  WritableStreamDefaultController: ["error"],
};
